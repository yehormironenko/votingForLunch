DROP TABLE voting IF EXISTS;
DROP TABLE lunches IF EXISTS;
DROP TABLE restaurants IF EXISTS;
DROP TABLE users IF EXISTS;
DROP SEQUENCE global_seq IF EXISTS;

CREATE SEQUENCE GLOBAL_SEQ
    AS INTEGER
    START WITH 100000;


CREATE TABLE users
(
    id         INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
    name       VARCHAR(255)            NOT NULL,
    email      VARCHAR(255)            NOT NULL,
    password   VARCHAR(255)            NOT NULL,
    registered TIMESTAMP DEFAULT now() NOT NULL,
    enabled    BOOLEAN   DEFAULT TRUE  NOT NULL
);
CREATE UNIQUE INDEX users_unique_email_idx
    ON USERS (email);

CREATE TABLE restaurants
(
    id      INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
    name    VARCHAR(255) NOT NULL,
    address VARCHAR(255)
);

CREATE UNIQUE INDEX restaurant_unique_idx
    ON restaurants (name, address);

CREATE TABLE lunches
(
    id            INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
    dish          VARCHAR(255)            NOT NULL,
    price         DECIMAL(19, 4)          NOT NULL,
    restaurant_id INTEGER                 NOT NULL,
    date          TIMESTAMP DEFAULT now() NOT NULL,
    FOREIGN KEY (restaurant_id) REFERENCES RESTAURANTS (id) ON DELETE CASCADE
);


CREATE TABLE voting
(
    id        INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
    user_id   INTEGER                 NOT NULL,
    lunch_id  INTEGER                 NOT NULL,
    date_vote TIMESTAMP DEFAULT now() NOT NULL,
    FOREIGN KEY (user_id) REFERENCES USERS (id) ON DELETE CASCADE,
    FOREIGN KEY (lunch_id) REFERENCES LUNCHES (id) ON DELETE CASCADE
);
CREATE UNIQUE INDEX user_vote_idx ON voting (user_id, lunch_id, date_vote);